---
button:
  - platform: output
    id: garage_door_opener_light_button
    name: $garage_light_name
    output: garage_door_opener_relay
    icon: "mdi:light-switch"
    duration: $garage_door_button_push_duration
  - platform: template
    id: calibrate_garage_door_light_sensor
    name: Calibrate Garage Door Light Sensor
    entity_category: config
    on_press:
      then:
        - number.set:
            id: garage_door_light_sensor_calibration
            value: !lambda return id(garage_door_light_sensor_calculated_lux).state;
        - logger.log:
              format: "Calibrated light sensor: %f"
              args: [ id(garage_door_light_sensor_calibration).state ]

output:
  - platform: gpio
    id: garage_door_opener_relay
    pin: $garage_door_light_relay_pin

sensor:
  - platform: tsl2591
    address: 0x29
    update_interval: 1s
    gain: 1x
    integration_time: 300ms
    calculated_lux:
      id: garage_door_light_sensor_calculated_lux
      name: "Garage Door Light Sensor Lux"
      entity_category: diagnostic
      filters:
        - lambda: |-
            if (std::isnan(x) || std::isinf(x)) {
              return 0.0;
            } else {
              return x;
            }

number:
  - platform: template
    name: Light sensor calibration
    id: garage_door_light_sensor_calibration
    icon: mdi:brightness-6
    entity_category: config
    unit_of_measurement: lx
    device_class: illuminance
    step: 10
    max_value: 5000
    min_value: 0
    optimistic: true
    restore_value: true

binary_sensor:
  - platform: template
    id: garage_door_light_state
    name: $garage_light_name
    device_class: light
    lambda: |-
      float calibrated_light = id(garage_door_light_sensor_calibration).state;
      float current_light = id(garage_door_light_sensor_calculated_lux).state;
      // 100 lx buffer to account for the bulb aging
      return current_light >= calibrated_light - 100;
    filters:
      - delayed_on_off: 2s
    on_state:
      - if:
          condition:
            lambda: return x;
          then:
            - logger.log:
                format: "Garage door light is on"
                level: INFO
          else:
              - logger.log:
                  format: "Garage door light is off"
                  level: INFO
